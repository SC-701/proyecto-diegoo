@page "{id:guid?}"
@model IndexModel
@{
    ViewData["Title"] = "Movimientos de Cuenta";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <!-- Header con información de la cuenta -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="mb-0">
                                <i class="fas fa-exchange-alt"></i>
                                Movimientos de Cuenta
                            </h4>
                            @if (!string.IsNullOrEmpty(Model.NombreCuenta))
                            {
                                <small class="text-light">@Model.NombreCuenta</small>
                            }
                        </div>
                        <div>
                            <a href="/Cuentas/Index" class="btn btn-light btn-sm me-2">
                                <i class="fas fa-arrow-left"></i>
                                Volver a Cuentas
                            </a>
                            @if (Model.IdCuenta.HasValue)
                            {
                                <a href="/Movimiento/Agregar?idCuenta=@Model.IdCuenta" class="btn btn-success">
                                    <i class="fas fa-plus"></i>
                                    Nuevo Movimiento
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Manejo de errores -->
            @if (Model.HasError)
            {
                <div class="alert alert-danger">
                    <h5><i class="fas fa-exclamation-triangle"></i> Error</h5>
                    <p>@Model.ErrorMessage</p>
                    <a href="/Cuentas/Index" class="btn btn-primary">
                        <i class="fas fa-arrow-left"></i>
                        Volver a Mis Cuentas
                    </a>
                </div>
            }
            else if (Model.movimientos != null && Model.movimientos.Any())
            {
                <!-- Tabla de movimientos -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-list"></i>
                            Últimos Movimientos (@Model.movimientos.Count)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th><i class="fas fa-calendar"></i> Fecha</th>
                                        <th><i class="fas fa-edit"></i> Descripción</th>
                                        <th><i class="fas fa-money-bill"></i> Monto</th>
                                        <th><i class="fas fa-toggle-on"></i> Estado</th>
                                        <th><i class="fas fa-cogs"></i> Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var movimiento in Model.movimientos)
                                    {
                                        <tr>
                                            <td>
                                                <small class="text-muted">
                                                    @movimiento.Fecha.ToString("dd/MM/yyyy")
                                                </small><br>
                                                <small>@movimiento.Fecha.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <strong>@movimiento.Descripcion</strong>
                                            </td>
                                            <td>
                                                <span class="fw-bold text-primary">
                                                    ₡@movimiento.MontoOriginal.ToString("N2")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(movimiento.Estado ? "bg-success" : "bg-danger")">
                                                    @(movimiento.Estado ? "Activo" : "Inactivo")
                                                </span>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="/Movimiento/Editar/@movimiento.idMovimiento" class="btn btn-sm btn-warning" title="Editar">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pen" viewBox="0 0 16 16">
                                                            <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001m-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708z" />
                                                        </svg>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-danger" title="Eliminar" onclick="confirmarEliminacion('@movimiento.idMovimiento', '@movimiento.Descripcion')">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                                        </svg>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Información adicional -->
                <div class="mt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i>
                                Mostrando los últimos @Model.movimientos.Count movimiento(s)
                            </small>
                        </div>
                    </div>
                </div>
            }
            else if (Model.IdCuenta.HasValue)
            {
                <!-- Estado sin movimientos -->
                <div class="card">
                    <div class="card-body text-center py-5">
                        <div class="mb-4">
                            <i class="fas fa-inbox fa-4x text-muted"></i>
                        </div>
                        <h4 class="text-muted">Esta cuenta no tiene movimientos</h4>
                        <p class="text-muted mb-4">
                            Comienza registrando el primer movimiento para esta cuenta.
                            Puedes agregar ingresos, gastos o transferencias.
                        </p>
                        <div class="d-flex justify-content-center gap-3">
                            <a href="/Movimiento/Agregar?idCuenta=@Model.IdCuenta" class="btn btn-success btn-lg">
                                <i class="fas fa-plus"></i>
                                Crear Primer Movimiento
                            </a>
                            <a href="/Cuentas/Index" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-arrow-left"></i>
                                Volver a Mis Cuentas
                            </a>
                        </div>

                        <!-- Sugerencias -->
                        <div class="mt-4">
                            <small class="text-muted">
                                <strong>Sugerencias:</strong> Puedes registrar el saldo inicial de la cuenta,
                                ingresos recibidos, gastos realizados o transferencias entre cuentas.
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle"></i>
                    Confirmar Eliminación de Movimiento
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <i class="fas fa-exchange-alt fa-3x text-danger"></i>
                </div>
                <p class="text-center mb-3">
                    ¿Está seguro de que desea eliminar el movimiento <strong id="movimientoDescripcion"></strong>?
                </p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Advertencia:</strong>
                    <ul class="mb-0 mt-2">
                        <li>Esta acción no se puede deshacer</li>
                        <li>El movimiento se eliminará permanentemente</li>
                        <li>Esto puede afectar el balance de la cuenta</li>
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i>
                    Cancelar
                </button>
                <form id="deleteForm" method="post" style="display: inline;" asp-page-handler="Delete">
                    <input type="hidden" id="movimientoIdInput" name="id" />
                    <input type="hidden" id="cuentaIdInput" name="idCuenta" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i>
                        Eliminar Movimiento
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            function confirmarEliminacion(movimientoId, descripcion) {
            document.getElementById('movimientoDescripcion').textContent = descripcion;
            document.getElementById('movimientoIdInput').value = movimientoId;
            document.getElementById('cuentaIdInput').value = '@Model.IdCuenta';

            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

    <style>
        .card-header {
            border-bottom: 1px solid rgba(0,0,0,.125);
        }

        .table th {
            border-top: none;
            font-weight: 600;
            font-size: 0.9rem;
        }

        .btn-group .btn {
            margin: 0 1px;
        }

        .fa-4x {
            font-size: 4rem;
        }
    </style>
}